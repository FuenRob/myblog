{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/article.js"],"names":["BlogList","render","console","log","this","props","pageContext","posts","data","allMarkdownRemark","edges","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","className","map","node","title","frontmatter","fields","slug","key","id","date","excerpt","cover","to","rel","React","Component","blogListQuery","sizes","childImageSharp"],"mappings":"oSAKqBA,E,0LACnBC,OAAA,WACEC,QAAQC,IAAIC,KAAKC,MAAMC,aACvB,IAAMC,EAAQH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAFzC,EAG2BN,KAAKC,MAAMC,YAArCK,EAHD,EAGCA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALR,EAGcG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,YAAC,IAAD,KACE,kBAAIE,UAAU,SAAd,QAGCX,EAAMY,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,YAAC,IAAD,CAASC,IAAKL,EAAKM,GACjBA,GAAIN,EAAKM,GACTF,KAAMJ,EAAKG,OAAOC,KAClBH,MAAOA,EACPM,KAAMP,EAAKE,YAAYK,KACvBC,QAASR,EAAKQ,QACdC,MAAOT,EAAKE,YAAYO,WAI9B,mBAAKX,UAAU,QACb,mBAAKA,UAAU,eACXN,GACF,YAAC,OAAD,CAAMM,UAAU,kBAAkBY,GAAI,SAAWf,EAAUgB,IAAI,QAA/D,sBAKF,mBAAKb,UAAU,0BACXL,GACA,YAAC,OAAD,CAAMK,UAAU,kBAAkBY,GAAI,SAAWb,EAAUc,IAAI,QAA/D,0B,GAtCwBC,IAAMC,WAiD/BC,EAAa,c,kCCtD1B,2DAIe,gBAAgD,IAA7CR,EAA4C,EAA5CA,GAAIF,EAAwC,EAAxCA,KAAMH,EAAkC,EAAlCA,MAAOM,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9C,OACI,uBAASJ,IAAKC,GACV,YAAC,OAAD,CAAMR,UAAU,OAAOY,GAAIN,GACpBK,EAAQ,YAAC,IAAD,CAAKX,UAAU,gBAAgBiB,MAAON,EAAMO,gBAAgBD,QAAY,KACnF,mBAAKjB,UAAU,gBACX,kBAAIA,UAAU,YACTG,GAEL,qBAAIO,GACJ,oBAAMV,UAAU,qBAAhB,iBAAmDS","file":"component---src-templates-blog-list-js-a65c26ba8bebc0fcf54e.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Article from \"../components/article\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    console.log(this.props.pageContext)\n    const posts = this.props.data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout>\n        <h1 className=\"title\">\n          Blog\n        </h1>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Article key={node.id}\n              id={node.id}\n              slug={node.fields.slug}\n              title={title}\n              date={node.frontmatter.date}\n              excerpt={node.excerpt}\n              cover={node.frontmatter.cover}\n            />\n          )\n        })}\n        <div className=\"flex\">\n          <div className=\"col-medium\">\n            {!isFirst && (\n            <Link className=\"btn btn-primary\" to={\"/blog/\" + prevPage} rel=\"prev\">\n              ← Página anterior\n            </Link>\n            )}\n          </div>\n          <div className=\"col-medium text-right\">\n            {!isLast && (\n              <Link className=\"btn btn-primary\" to={\"/blog/\" + nextPage} rel=\"next\">\n                Página siguiente →\n              </Link>\n            )}\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: {frontmatter: {date: {ne: null}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\", locale: \"es\")\n            cover {\n              publicURL\n              childImageSharp {\n                sizes(maxWidth: 2000) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from 'gatsby-image'\n\nexport default ({ id, slug, title, date, excerpt, cover }) => {\n    return (\n        <article key={id}>\n            <Link className=\"link\" to={slug}>\n                {!!cover ? <Img className=\"article-image\" sizes={cover.childImageSharp.sizes} /> : null}\n                <div className=\"article-body\">\n                    <h2 className=\"subtitle\">\n                        {title}\n                    </h2>\n                    <p>{excerpt}</p>\n                    <span className=\"font-grey initial\"> Publicado el {date}</span>\n                </div>\n            </Link>\n        </article>\n    )\n}\n"],"sourceRoot":""}