{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/integrar-sanityio-en-reactjs/","result":{"data":{"markdownRemark":{"html":"<p>Empecemos por el principio, <strong>¿qué es Sanity.io?</strong> Es un software que genera un backend dentro de tu sitio web con el que puedes gestionar los contenidos de tu blog, web corporativa o ecommerce, vamos, lo que se conoce con el nombre de CMS. Añado que es un CMS algo básico, ya que muchas personas al escuchar la palabra CMS automáticamente piensan en Wordpress.</p>\n<p><strong>¿Por qué me interesaría integrar Sanity en un proyecto?</strong> Es interesante porque se conecta mediante API con los principales frameworks de Frontend para hacer blogs o web corporativas como React, NextJS o VueJS, dándoles la posibilidad de editar su contenido sin tener tener conocimientos de desarrollo web.</p>\n<p><strong>¿Cuál es su precio?</strong> Puedes empezar con un plan gratuito que para hacer las primeras pruebas es más que suficiente y después se puede optar por un plan avanzado de 199$ por proyecto al mes o un custom según tus necesidades.</p>\n<p>Ahora vamos a ver cómo se integra con una web hecha con ReactJS.</p>\n<p>En primer lugar debemos instalar, crear, nuestra webapp de reactjs:</p>\n<pre><code>npx create-react-app my-project\ncd my-project\n</code></pre>\n<p>Ahora debemos instalar el paquete de sanity/cli en nuestro equipo y para ello vamos a lanzar el siguiente comando:</p>\n<pre><code>npm install -g @sanity/cli\n</code></pre>\n<p><strong>Si añades el -g en tu comando instalar el paquete de manera global.</strong></p>\n<p>Ahora que ya tenemos el paquete de Sanity instalado, ejecutamos el comando que inicia la creación de un nuevo proyecto en nuestro paquete de la webapp:</p>\n<pre><code>sanity init\n</code></pre>\n<p>Esto te pedirá que hagas login y te dará tres opciones de hacerlo, con tu cuenta de github, google o con cuenta de correo y contraseña.</p>\n<p>Una vez hecho el login, nos preguntará si queremos usar un proyecto que ya tengamos. </p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/i/syye2bk24n3g2jpfeujh.png\" alt=\"Integrar Sanity.io en ReactJS 2\"></p>\n<p>Si escogemos uno nuevo nos pedirá un nombre para el proyecto, después nos preguntará: <strong>Use the default dataset configuration?</strong> le indicamos que sí poniendo una <strong>Y</strong>, nos preguntará cual es la ruta para el proyecto, el path, y por último, nos dará las siguientes opciones para generar el proyecto:</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/i/fxaph8utmg3puaq9mhb5.png\" alt=\"Integrar Sanity.io en ReactJS 3\"></p>\n<p>Con esto ya tenemos nuestro backend de Sanity preparado para conectarlo a la webapp. Si quieres levantar el proyecto de Sanity solo tiene que entrar en la carpeta de tu proyecto de sanity, por ejemplo <strong>cd mysanityproject</strong> y lanzar el siguiente comando:</p>\n<pre><code>sanity start\n</code></pre>\n<p>Ahora que ya tenemos todo funcionando, volvemos a nuestra carpeta de webapp, en mi caso la carpeta my-project y descargamos el paquete para el cliente de Sanity:</p>\n<pre><code>npm install --save @sanity/client\n</code></pre>\n<p>A continuación, creamos un fichero, yo lo he llamado sanityClient.js, dentro de la carpeta <strong>/src</strong> de nuestro proyecto con el siguiente contenido:</p>\n<pre><code class=\"language-javascript\">import sanityClient from '@sanity/client'\n\nexport default sanityClient({\n    projectId: \"IDPROJECT\",\n    dataset: \"production\"\n})\n</code></pre>\n<p>El IDPROJECT lo encontraras en el fichero: mysanityproject/sanity.json.</p>\n<p>Por último, en el componente en el que quieras mostrar datos de Sanity, por ejemplo todos los posts para generar un listado, debes tener un código parecido al siguiente. <strong>En los comentarios aclaro las partes de código que son necesarios para hacer la integración con Sanity</strong>:</p>\n<pre><code class=\"language-javascript\">import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n// Importamos el cliente que tiene el IDProject para conectar \n// con el proyecto de Sanity\nimport sanityClient from '../sanityClient' \n\n\nexport default function Posts() {\n    const [postData, setPost] = useState(null)\n    \n    useEffect(() => {\n        // Consultamos todos los datos, por eso el *, del tipo post y cogemos los que queremos\n        sanityClient.fetch(`*[_type == \"post\"]{\n            title,\n            slug,\n            mainImage{\n                asset->{\n                    _id,\n                    url,\n                },\n                alt\n            }\n        }`).then((data) => setPost(data))\n        .catch(console.error)\n    }, [])\n    \n    return (\n        &#x3C;main className=\"bg-green-100 min-h-screen p-12\">\n            &#x3C;section className=\"container mx-auto\">\n                &#x3C;h1 className=\"text-5xl flex justify-center\">Blog&#x3C;/h1>\n                &#x3C;h2 className=\"text-lg text-gray-600 flex justify-center mb-12\">Welcome to my Blog Page&#x3C;/h2>\n                &#x3C;div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    // Hacemos un bucle para sacar los datos que hemos traído de la api de Sanity\n                    {postData &#x26;&#x26; postData.map((post, index) => (\n                        &#x3C;article>\n                            &#x3C;Link to={`/post/${post.slug.current}`} key={post.slug.current}>\n                                &#x3C;span className=\"block h-64 relative rounded shadow leading-snug bg-white border-l-8 border-green-400\" key={index}>\n                                    &#x3C;img \n                                        src={post.mainImage.asset.url}\n                                        alt={post.mainImage.alt}\n                                        className=\"w-full h-full rounded-r object-cover absolute\"\n                                    />\n                                    &#x3C;span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\n                                        &#x3C;h3 className=\"text-gray-800 text-lg font-bold px-3 py-4 bg-green-700 text-green-100 bg-opacity-75 rounded\">{post.title}&#x3C;/h3>\n                                    &#x3C;/span>\n                                &#x3C;/span>\n                            &#x3C;/Link>\n                        &#x3C;/article>\n                    ))}\n                &#x3C;/div>\n            &#x3C;/section>\n        &#x3C;/main>\n    )\n}\n</code></pre>","frontmatter":{"title":"Integrar Sanity.io en ReactJS","date":"2021-01-10","cover":null},"fields":{"slug":"/blog/integrar-sanityio-en-reactjs/"}},"site":{"siteMetadata":{"comments":{"GATSBY_DISQUS_NAME":"fuenrob"}}}},"pageContext":{"slug":"/blog/integrar-sanityio-en-reactjs/"}}}